[0.000000] (-) TimerEvent: {}
[0.004279] (-) JobUnselected: {'identifier': 'village_interfaces'}
[0.004394] (-) JobUnselected: {'identifier': 'village_task'}
[0.004418] (-) JobUnselected: {'identifier': 'village_taskgroups'}
[0.004445] (village_operator) JobQueued: {'identifier': 'village_operator', 'dependencies': OrderedDict([('village_interfaces', '/home/lichaoyue/Desktop/tasktown_ws/install/village_interfaces')])}
[0.004472] (village_operator) JobStarted: {'identifier': 'village_operator'}
[0.037587] (village_operator) JobProgress: {'identifier': 'village_operator', 'progress': 'cmake'}
[0.044268] (village_operator) JobProgress: {'identifier': 'village_operator', 'progress': 'build'}
[0.044574] (village_operator) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/lichaoyue/Desktop/tasktown_ws/build/village_operator', '--', '-j12', '-l12'], 'cwd': '/home/lichaoyue/Desktop/tasktown_ws/build/village_operator', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'lichaoyue'), ('XDG_SESSION_TYPE', 'wayland'), ('GIT_ASKPASS', '/usr/share/code/resources/app/extensions/git/dist/askpass.sh'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/home/lichaoyue/Desktop/tasktown_ws/install/village_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/lichaoyue'), ('CHROME_DESKTOP', 'code-url-handler.desktop'), ('TERM_PROGRAM_VERSION', '1.88.1'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('VSCODE_GIT_ASKPASS_MAIN', '/usr/share/code/resources/app/extensions/git/dist/askpass-main.js'), ('VSCODE_GIT_ASKPASS_NODE', '/usr/share/code/code'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('SYSTEMD_EXEC_PID', '1688'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=1d0519f746670bc1d310b7eb665efcb9'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/lichaoyue/Desktop/tasktown_ws/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'lichaoyue'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'lichaoyue'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/lichaoyue-virtual-machine:@/tmp/.ICE-unix/1688,unix/lichaoyue-virtual-machine:/tmp/.ICE-unix/1688'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/cab4179c_58de_476c_86cd_a5ecb1687755'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('GDK_BACKEND', 'x11'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'Unity'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.VI59N2'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/1000/vscode-git-7eb22a8617.sock'), ('GNOME_TERMINAL_SERVICE', ':1.102'), ('TERM_PROGRAM', 'vscode'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('ROSDISTRO_INDEX_URL', 'https://mirrors.bfsu.edu.cn/rosdistro/index-v4.yaml'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/lichaoyue/Desktop/tasktown_ws/install/village_taskgroups:/home/lichaoyue/Desktop/tasktown_ws/install/village_task:/home/lichaoyue/Desktop/tasktown_ws/install/village_operator:/home/lichaoyue/Desktop/tasktown_ws/install/village_interfaces:/opt/ros/humble'), ('ORIGINAL_XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', ''), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/lichaoyue/Desktop/tasktown_ws/build/village_operator'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=1d0519f746670bc1d310b7eb665efcb9'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/lichaoyue/Desktop/tasktown_ws/install/village_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/lichaoyue/Desktop/tasktown_ws/install/village_interfaces:/home/lichaoyue/Desktop/tasktown_ws/install/village_taskgroups:/home/lichaoyue/Desktop/tasktown_ws/install/village_task:/home/lichaoyue/Desktop/tasktown_ws/install/village_operator:/opt/ros/humble')]), 'shell': False}
[0.100171] (-) TimerEvent: {}
[0.178779] (village_operator) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target operator_node\x1b[0m\n'}
[0.201321] (-) TimerEvent: {}
[0.243304] (village_operator) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/operator_node.dir/src/operator.cpp.o\x1b[0m\n'}
[0.301544] (-) TimerEvent: {}
[0.402645] (-) TimerEvent: {}
[0.503702] (-) TimerEvent: {}
[0.604832] (-) TimerEvent: {}
[0.706444] (-) TimerEvent: {}
[0.807383] (-) TimerEvent: {}
[0.908865] (-) TimerEvent: {}
[1.011267] (-) TimerEvent: {}
[1.112616] (-) TimerEvent: {}
[1.214439] (-) TimerEvent: {}
[1.316246] (-) TimerEvent: {}
[1.417817] (-) TimerEvent: {}
[1.518886] (-) TimerEvent: {}
[1.619972] (-) TimerEvent: {}
[1.721818] (-) TimerEvent: {}
[1.822835] (-) TimerEvent: {}
[1.923799] (-) TimerEvent: {}
[2.024698] (-) TimerEvent: {}
[2.125555] (-) TimerEvent: {}
[2.225793] (-) TimerEvent: {}
[2.327387] (-) TimerEvent: {}
[2.428841] (-) TimerEvent: {}
[2.529826] (-) TimerEvent: {}
[2.630765] (-) TimerEvent: {}
[2.732526] (-) TimerEvent: {}
[2.834070] (-) TimerEvent: {}
[2.934820] (-) TimerEvent: {}
[3.036284] (-) TimerEvent: {}
[3.143688] (-) TimerEvent: {}
[3.244130] (-) TimerEvent: {}
[3.345061] (-) TimerEvent: {}
[3.445874] (-) TimerEvent: {}
[3.546857] (-) TimerEvent: {}
[3.647822] (-) TimerEvent: {}
[3.750285] (-) TimerEvent: {}
[3.850667] (-) TimerEvent: {}
[3.951879] (-) TimerEvent: {}
[4.052891] (-) TimerEvent: {}
[4.154693] (-) TimerEvent: {}
[4.255800] (-) TimerEvent: {}
[4.357681] (-) TimerEvent: {}
[4.459033] (-) TimerEvent: {}
[4.561032] (-) TimerEvent: {}
[4.661813] (-) TimerEvent: {}
[4.763732] (-) TimerEvent: {}
[4.864962] (-) TimerEvent: {}
[4.965940] (-) TimerEvent: {}
[5.066977] (-) TimerEvent: {}
[5.168595] (-) TimerEvent: {}
[5.270041] (-) TimerEvent: {}
[5.370886] (-) TimerEvent: {}
[5.472187] (-) TimerEvent: {}
[5.573071] (-) TimerEvent: {}
[5.673897] (-) TimerEvent: {}
[5.775648] (-) TimerEvent: {}
[5.876581] (-) TimerEvent: {}
[5.978420] (-) TimerEvent: {}
[6.079042] (-) TimerEvent: {}
[6.179919] (-) TimerEvent: {}
[6.280966] (-) TimerEvent: {}
[6.382034] (-) TimerEvent: {}
[6.483168] (-) TimerEvent: {}
[6.584740] (-) TimerEvent: {}
[6.685287] (-) TimerEvent: {}
[6.786817] (-) TimerEvent: {}
[6.887969] (-) TimerEvent: {}
[6.989010] (-) TimerEvent: {}
[7.090045] (-) TimerEvent: {}
[7.191074] (-) TimerEvent: {}
[7.291991] (-) TimerEvent: {}
[7.393109] (-) TimerEvent: {}
[7.494116] (-) TimerEvent: {}
[7.595013] (-) TimerEvent: {}
[7.696398] (-) TimerEvent: {}
[7.797192] (-) TimerEvent: {}
[7.897849] (-) TimerEvent: {}
[7.999051] (-) TimerEvent: {}
[8.103078] (-) TimerEvent: {}
[8.204127] (-) TimerEvent: {}
[8.305820] (-) TimerEvent: {}
[8.408238] (-) TimerEvent: {}
[8.501291] (village_operator) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[8.502751] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[8.504504] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[8.504906] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.505078] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.505234] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.505385] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.505532] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.505692] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.505836] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.505978] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lichaoyue/Desktop/tasktown_ws/src/village_operator/src/operator.cpp:5\x1b[m\x1b[K:\n'}
[8.506217] (village_operator) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<void (TaskAssignServer::*(TaskAssignServer*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<village_interfaces::srv::TaskAssign_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::TaskAssign_Response_<std::allocator<void> > >)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = village_interfaces::srv::UpdateTask]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.506480] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = village_interfaces::srv::UpdateTask; CallbackT = std::_Bind<void (TaskAssignServer::*(TaskAssignServer*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<village_interfaces::srv::TaskAssign_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::TaskAssign_Response_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<village_interfaces::srv::UpdateTask> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.506713] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = village_interfaces::srv::UpdateTask; CallbackT = std::_Bind<void (TaskAssignServer::*(TaskAssignServer*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<village_interfaces::srv::TaskAssign_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::TaskAssign_Response_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<village_interfaces::srv::UpdateTask> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.506976] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lichaoyue/Desktop/tasktown_ws/src/village_operator/src/operator.cpp:223:88:\x1b[m\x1b[K   required from here\n'}
[8.507131] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:103:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<village_interfaces::srv::UpdateTask> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (TaskAssignServer::*(TaskAssignServer*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<village_interfaces::srv::TaskAssign_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::TaskAssign_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99)\n'}
[8.507349] (village_operator) StderrLine: {'line': b'  103 |       \x1b[01;31m\x1b[Kcallback_ = std::forward<CallbackT>(callback)\x1b[m\x1b[K;\n'}
[8.507496] (village_operator) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.507930] (village_operator) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[8.508121] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[8.508266] (-) TimerEvent: {}
[8.508500] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[8.508680] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.508828] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.509075] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.509236] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.509493] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.509654] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.509802] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.509946] (village_operator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lichaoyue/Desktop/tasktown_ws/src/village_operator/src/operator.cpp:5\x1b[m\x1b[K:\n'}
[8.510180] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<village_interfaces::srv::UpdateTask> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.510405] (village_operator) StderrLine: {'line': b' 1461 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[8.510556] (village_operator) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.510793] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.510946] (village_operator) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::_Bind<void (TaskAssignServer::*(TaskAssignServer*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<village_interfaces::srv::TaskAssign_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::TaskAssign_Response_<std::allocator<void> > >)>&&; <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<village_interfaces::srv::UpdateTask> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.511398] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1457:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<village_interfaces::srv::UpdateTask> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<village_interfaces::srv::UpdateTask> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<village_interfaces::srv::UpdateTask> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<village_interfaces::srv::UpdateTask> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<village_interfaces::srv::UpdateTask> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::_Bind<void (TaskAssignServer::*(TaskAssignServer*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<village_interfaces::srv::TaskAssign_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::TaskAssign_Response_<std::allocator<void> > >)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.511698] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:103:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<void (TaskAssignServer::*(TaskAssignServer*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<village_interfaces::srv::TaskAssign_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::TaskAssign_Response_<std::allocator<void> > >)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = village_interfaces::srv::UpdateTask]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.512190] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = village_interfaces::srv::UpdateTask; CallbackT = std::_Bind<void (TaskAssignServer::*(TaskAssignServer*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<village_interfaces::srv::TaskAssign_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::TaskAssign_Response_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<village_interfaces::srv::UpdateTask> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.512519] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = village_interfaces::srv::UpdateTask; CallbackT = std::_Bind<void (TaskAssignServer::*(TaskAssignServer*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<village_interfaces::srv::TaskAssign_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::TaskAssign_Response_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<village_interfaces::srv::UpdateTask> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.512801] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lichaoyue/Desktop/tasktown_ws/src/village_operator/src/operator.cpp:223:88:\x1b[m\x1b[K   required from here\n'}
[8.512983] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1375:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.513139] (village_operator) StderrLine: {'line': b' 1375 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[8.513284] (village_operator) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.513427] (village_operator) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<void (TaskAssignServer::*(TaskAssignServer*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<village_interfaces::srv::TaskAssign_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::TaskAssign_Response_<std::allocator<void> > >)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = village_interfaces::srv::UpdateTask]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.513591] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = village_interfaces::srv::UpdateTask; CallbackT = std::_Bind<void (TaskAssignServer::*(TaskAssignServer*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<village_interfaces::srv::TaskAssign_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::TaskAssign_Response_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<village_interfaces::srv::UpdateTask> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.513760] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = village_interfaces::srv::UpdateTask; CallbackT = std::_Bind<void (TaskAssignServer::*(TaskAssignServer*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<village_interfaces::srv::TaskAssign_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::TaskAssign_Response_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<village_interfaces::srv::UpdateTask> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.513935] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lichaoyue/Desktop/tasktown_ws/src/village_operator/src/operator.cpp:223:88:\x1b[m\x1b[K   required from here\n'}
[8.514199] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<village_interfaces::srv::UpdateTask> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.514612] (village_operator) StderrLine: {'line': b' 1398 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[8.514766] (village_operator) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.514909] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (TaskAssignServer::*(TaskAssignServer*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<village_interfaces::srv::TaskAssign_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::TaskAssign_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<village_interfaces::srv::UpdateTask> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.515068] (village_operator) StderrLine: {'line': b' 1398 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[8.515212] (village_operator) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.515423] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<village_interfaces::srv::UpdateTask> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.515686] (village_operator) StderrLine: {'line': b' 1399 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[8.516023] (village_operator) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.516279] (village_operator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (TaskAssignServer::*(TaskAssignServer*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<village_interfaces::srv::TaskAssign_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::TaskAssign_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >, std::shared_ptr<village_interfaces::srv::UpdateTask_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<village_interfaces::srv::UpdateTask> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<village_interfaces::srv::UpdateTask_Request_<std::allocator<void> > >)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.516626] (village_operator) StderrLine: {'line': b' 1399 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[8.516890] (village_operator) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.608878] (-) TimerEvent: {}
[8.710093] (-) TimerEvent: {}
[8.811147] (-) TimerEvent: {}
[8.912080] (-) TimerEvent: {}
[9.013135] (-) TimerEvent: {}
[9.113887] (-) TimerEvent: {}
[9.216292] (-) TimerEvent: {}
[9.317370] (-) TimerEvent: {}
[9.419206] (-) TimerEvent: {}
[9.520368] (-) TimerEvent: {}
[9.621272] (-) TimerEvent: {}
[9.722299] (-) TimerEvent: {}
[9.824595] (-) TimerEvent: {}
[9.925014] (-) TimerEvent: {}
[10.027164] (-) TimerEvent: {}
[10.110284] (village_operator) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/operator_node.dir/build.make:76: CMakeFiles/operator_node.dir/src/operator.cpp.o] Error 1\n'}
[10.110772] (village_operator) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/operator_node.dir/all] Error 2\n'}
[10.111369] (village_operator) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[10.115652] (village_operator) CommandEnded: {'returncode': 2}
[10.128063] (-) TimerEvent: {}
[10.235041] (-) TimerEvent: {}
[10.257711] (village_operator) JobEnded: {'identifier': 'village_operator', 'rc': 2}
[10.269323] (-) EventReactorShutdown: {}
